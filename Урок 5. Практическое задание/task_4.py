"""
Задача 4.
Поработайте с обычным словарем и OrderedDict.
Выполните операции, равные по смыслу, с каждым из объектов и сделайте замеры.
Опишите полученные результаты, сделайте выводы.

И есть ли смысл исп-ть OrderedDict в Python 3.6 и более поздних версиях?
"""

from collections import OrderedDict
from random import randint
from timeit import repeat

random = randint(0, 1000)
default_dictionary = {i: i for i in range(1000)}
ordered_dictionary = OrderedDict(default_dictionary)

# Вывод ключ:значение словаря
print('# Вывод ключ:значение словаря')
d = repeat('default_dictionary.items()', globals=globals())
od = repeat('ordered_dictionary.items()', globals=globals())
avg_d = sum(d) / len(d)
avg_od = sum(od) / len(od)
print(f"Среднее для словаря: {avg_d} |\t {d},\nСредняя для сортированного словаря: {avg_od} |\t {od}")

# Вывод значения из словаря по ключу
print('# Вывод значения из словаря по ключу')
d = repeat('default_dictionary.get(random)', globals=globals())
od = repeat('ordered_dictionary.get(random)', globals=globals())
avg_d = sum(d) / len(d)
avg_od = sum(od) / len(od)
print(f"Среднее для словаря: {avg_d} |\t {d},\nСредняя для сортированного словаря: {avg_od} |\t {od}")

# Вывод ключей словаря
print('# Вывод ключей словаря')
d = repeat('default_dictionary.keys()', globals=globals())
od = repeat('ordered_dictionary.keys()', globals=globals())
avg_d = sum(d) / len(d)
avg_od = sum(od) / len(od)
print(f"Среднее для словаря: {avg_d} |\t {d},\nСредняя для сортированного словаря: {avg_od} |\t {od}")

# Вывод значений словаря
print('# Вывод значений словаря')
d = repeat('default_dictionary.values()', globals=globals())
od = repeat('ordered_dictionary.values()', globals=globals())
avg_d = sum(d) / len(d)
avg_od = sum(od) / len(od)
print(f"Среднее для словаря: {avg_d} |\t {d},\nСредняя для сортированного словаря: {avg_od} |\t {od}")

# Удаление и возврат элемента словаря
print('# Удаление и возврат элемента словаря')
d = repeat('default_dictionary.pop(random, None)', globals=globals())
od = repeat('ordered_dictionary.pop(random, None)', globals=globals())
avg_d = sum(d) / len(d)
avg_od = sum(od) / len(od)
print(f"Среднее для словаря: {avg_d} |\t {d},\nСредняя для сортированного словаря: {avg_od} |\t {od}")

# Добавление в словарь нового ключ:значение
print('# Добавление в словарь нового ключ:значение')
d = repeat('default_dictionary.update({"test": "test"})', globals=globals())
od = repeat('ordered_dictionary.update({"test": "test"})', globals=globals())
avg_d = sum(d) / len(d)
avg_od = sum(od) / len(od)
print(f"Среднее для словаря: {avg_d} |\t {d},\nСредняя для сортированного словаря: {avg_od} |\t {od}")

"""
Проведя сравнения можно сказать что разницы нет кроме одного метода Сортированного словаря - move_to_end, который
позволяет выбранные ключ:значение перенести в конец словаря.
Замеры:
# Вывод ключ:значение словаря
Среднее для словаря: 0.0918629 |	 
[0.1237937, 0.10514209999999999, 0.08123350000000001, 0.07790049999999998, 0.0712447],
Средняя для сортированного словаря: 0.10005366 |	 
[0.10949900000000001, 0.09712310000000002, 0.07393899999999998, 0.12069459999999999, 0.0990126]
# Вывод значения из словаря по ключу
Среднее для словаря: 0.08388558000000002 |	 
[0.0803045, 0.08581059999999985, 0.07490590000000008, 0.09988920000000001, 0.07851770000000013],
Средняя для сортированного словаря: 0.07710561999999999 |	 
[0.07313539999999996, 0.0673976999999999, 0.08282009999999995, 0.07545390000000007, 0.08672100000000005]
# Вывод ключей словаря
Среднее для словаря: 0.07687185999999993 |	 
[0.08078150000000006, 0.07074289999999994, 0.08175949999999976, 0.07700269999999998, 0.07407269999999988],
Средняя для сортированного словаря: 0.08970706000000002 |	 
[0.08788190000000018, 0.08238410000000007, 0.09835839999999996, 0.09387539999999994, 0.08603549999999993]
# Вывод значений словаря
Среднее для словаря: 0.08862630000000013 |	 
[0.08506599999999986, 0.10558970000000034, 0.09564990000000018, 0.07652990000000015, 0.08029600000000015],
Средняя для сортированного словаря: 0.08218781999999995 |	 
[0.0918032000000002, 0.09361050000000004, 0.08155599999999996, 0.07110609999999973, 0.07286329999999985]
# Удаление и возврат элемента словаря
Среднее для словаря: 0.10561546000000002 |	 
[0.10415479999999988, 0.11033600000000021, 0.09624940000000004, 0.09623090000000012, 0.12110619999999983],
Средняя для сортированного словаря: 0.17394604000000005 |	 
[0.1610276000000006, 0.17583910000000014, 0.1893817999999996, 0.1832925999999997, 0.1601891000000002]
# Добавление в словарь нового ключ:значение
Среднее для словаря: 0.21123162000000023 |	 
[0.20239070000000048, 0.2326371000000007, 0.1987907, 0.2151139999999998, 0.20722560000000012],
Средняя для сортированного словаря: 0.3253062399999999 |	 
[0.32632700000000003, 0.3261737, 0.3275414999999997, 0.3250668000000001, 0.32142219999999977]

Итог: По результатам замеров можно сделать вывод, что кроме выполнения метода .get() и .values(), в остальных 
сортированный словарь терпит поражение.
"""
